# -*- coding: utf-8 -*-
"""SemanticAndInstanceSegmentation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15lqIl-GIkW7G4QaYMcvYL4LgcPAChwTi
"""

##Definici√≥n de Librerias

import pixellib
from pixellib.semantic import semantic_segmentation
from pixellib.instance import instance_segmentation

##Semantic Segmentation
print("Semantic Image Segmentation Process...")

#Definition of semantic_segmentation in pixellib Library
segment_image = semantic_segmentation()

#Es necesario los pesos de deeplabv3_xception_tf_dim_ordering_tf_kernels.h5
segment_image.load_pascalvoc_model("deeplabv3_xception_tf_dim_ordering_tf_kernels.h5") 

#Semantic Segmentation
segment_image.segmentAsPascalvoc("test7_4.jpg", output_image_name = "person_segmentationN.jpg")

#Semantic Segmentation with image Mask
segment_image.segmentAsPascalvoc("test7_4.jpg", output_image_name = "person_segmentationN_Mask.jpg", overlay = True)

print("Done")

##Instance Segmentation
print("Instance Image Segmentation Process...")

#Definition of Instance_segmentation in pixellib Library
segment_image2 = instance_segmentation()

#Es necesario los pesos de mask_rcnn_coco.h5
segment_image2.load_model("mask_rcnn_coco.h5") 

#Instance Segmentation
segment_image2.segmentImage("test7_4.jpg", output_image_name = "person_segmentation_RCNN_N.jpg")

##Instance Segmentation with object boundary by category
segment_image2.segmentImage("test7_4.jpg", output_image_name = "person_segmentation_RCNN_Masked_N.jpg", show_bboxes = True)

print("Done")